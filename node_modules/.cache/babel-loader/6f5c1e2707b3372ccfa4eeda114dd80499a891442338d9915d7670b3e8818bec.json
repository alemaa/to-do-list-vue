{"ast":null,"code":"import { ref } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'toDoList',\n  props: {\n    title: String,\n    todos: Array,\n    count: Number\n  },\n  emits: ['removeTodos'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const store = useStore();\n    const todos = store.get;\n    const emit = __emit;\n    const newItem = ref('');\n    const addItem = () => {\n      store.dispatch('addTodo', newItem.value);\n      newItem.value = \"\";\n      newItem.value = \"\";\n    };\n\n    // onMounted(()=>{\n    //fetchTodos();\n    //});\n\n    /* const addItem=()=>{\n       todos.value.push ({\n           id:todos.value.length + 1,\n           text:newItem.value,\n           completed:false\n       });\n       newItem.value=\"\";\n     };*/\n\n    // export default {\n    //   name:\"toDoList\",\n    // setup(){\n    //   const todos=ref([]);\n    //   const newTask=ref('');\n    //   const fetchTodos= ()=>{\n    //     todos.value=[\n    //         {id:1,text:\"Buy groceries\",completed:true},\n    //         {id:2, text:\"To go for a walk\", completed:true},\n    //         {id:3, text:\"Read a book\", completed:false}\n    //     ]\n    //   };\n    //   onMounted(()=>{\n    //     fetchTodos();\n    //   });\n    //   const addTask=()=>{\n    //     todos.value.push ({\n    //         id:todos.value.length + 1,\n    //         text:newTask.value,\n    //         completed:false\n    //     });\n    //     newTask.value=\"\";\n    //   };\n    //   return {\n    //       todos,\n    //       newTask,\n    //       addTask,\n    //     };\n    //   },\n    // };\n\n    const __returned__ = {\n      store,\n      todos,\n      emit,\n      newItem,\n      addItem,\n      ref,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useStore","store","todos","get","emit","__emit","newItem","addItem","dispatch","value"],"sources":["/home/indevitus/to-do-list-vue/src/components/toDoList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>\n      {{ title }}\n    </h1>\n    <ul>\n      <template v-for=\"todo in todos\" :key=\"todo.id\">\n        <li :class=\"{ 'completed': todo.completed }\">\n          <span>\n            {{ todo.text }}\n          </span>\n        </li>\n        <button @click=\"$emit('removeTodos',index)\">Remove</button>\n      </template>\n    </ul>\n    </div>\n    <div>\n    <input class=\"inputClass\"\n      type=\"text\"\n      v-model=\"newItem\"\n      placeholder=\"add new item\"\n    />\n    <button @click=\"addItem\">Add</button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps,defineEmits} from 'vue'\nimport { useStore } from 'vuex'\nconst store = useStore();\nconst todos=store.get\ndefineProps({\n  title: String,\n  todos: Array,\n  count:Number\n})\n const emit = defineEmits([\n  'removeTodos'\n])\n\n\n\nconst newItem=ref('');\n\nconst addItem=()=>{\n  store.dispatch('addTodo',newItem.value)\n  newItem.value=\"\";\n\n  newItem.value=\"\";\n};\n\n\n // onMounted(()=>{\n    //fetchTodos();\n  //});\n\n /* const addItem=()=>{\n    todos.value.push ({\n        id:todos.value.length + 1,\n        text:newItem.value,\n        completed:false\n    });\n    newItem.value=\"\";\n  };*/\n\n// export default {\n//   name:\"toDoList\",\n// setup(){\n//   const todos=ref([]);\n//   const newTask=ref('');\n//   const fetchTodos= ()=>{\n//     todos.value=[\n//         {id:1,text:\"Buy groceries\",completed:true},\n//         {id:2, text:\"To go for a walk\", completed:true},\n//         {id:3, text:\"Read a book\", completed:false}\n//     ]\n//   };\n//   onMounted(()=>{\n//     fetchTodos();\n//   });\n//   const addTask=()=>{\n//     todos.value.push ({\n//         id:todos.value.length + 1,\n//         text:newTask.value,\n//         completed:false\n//     });\n//     newTask.value=\"\";\n//   };\n//   return {\n//       todos,\n//       newTask,\n//       addTask,\n//     };\n//   },\n// };\n</script>\n\n<style>\n.completed {\n  text-decoration: underline;\n}\nul li {\n  border: 1px solid red;\n  padding: 10px;\n  margin: 10px;\n  width: 150px;\n}\n.inputClass {\n  margin-left: 50px;\n}\nbutton {\n  background-color: rgb(170, 164, 155);\n  width: 80px;\n  height: 30px;\n  border: 1px solid rgb(51, 50, 50);\n  margin-left: 10px;\n}\n</style>\n"],"mappings":"AA2BA,SAASA,GAA4B,QAAO,KAAI;AAChD,SAASC,QAAQ,QAAQ,MAAK;;;;;;;;;;;;;;IAC9B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAME,KAAK,GAACD,KAAK,CAACE,GAAE;IAMnB,MAAMC,IAAI,GAAGC,MAAA;IAMd,MAAMC,OAAO,GAACP,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMQ,OAAO,GAACA,CAAA,KAAI;MAChBN,KAAK,CAACO,QAAQ,CAAC,SAAS,EAACF,OAAO,CAACG,KAAK;MACtCH,OAAO,CAACG,KAAK,GAAC,EAAE;MAEhBH,OAAO,CAACG,KAAK,GAAC,EAAE;IAClB,CAAC;;IAGA;IACG;IACF;;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}