{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"display\": \"none\"\n  }\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"To do list\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todos, todo => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: todo.id\n    }, [!todo.completed ? (_openBlock(), _createElementBlock(\"li\", _hoisted_1, [_createElementVNode(\"span\", null, _toDisplayString(todo.text), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["key","style","_createElementBlock","_createElementVNode","_Fragment","_renderList","_ctx","todos","todo","id","completed","_hoisted_1","_toDisplayString","text","_createCommentVNode"],"sources":["/home/indevitus/to-do/src/components/toDoList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>To do list</h1>\n    <ul>\n      <template v-for=\"todo in todos\" :key=\"todo.id\">\n        <li v-if=\"!todo.completed\" style=\"display: none;\">\n          <span>\n            {{ todo.text }}\n          </span>\n        </li>\n      </template>\n    </ul>\n  </div>\n</template>\n\n<script setup>\n\n   import { ref, computed } from 'vue'\n\n  mounted(){\n  this.fetchTodos();\n  },\n function fetchTodos()\n     {\n      this.todos = [\n        {id:1, text:\"Buy groceries\", completed:true},\n        {id:2, text:\"To go for a walk\", completed:true},\n        {id:3, text:\"Read a book\", completed:false}\n      ];\n  }\n\n const filterCompleted=computed (\n    function (){\n      return todos.filter(todo=>todo.completed);\n    }\n)\n</script>\n\n<style>\nul li {\n  border: 1px solid red;\n  padding: 10px;\n  margin: 10px;\n  width: 150px;\n}\n</style>\n"],"mappings":";;EAAAA,GAAA;EAKmCC,KAAsB,EAAtB;IAAA;EAAA;;;uBAJjCC,mBAAA,CAWM,c,0BAVJC,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAQK,c,kBAPHD,mBAAA,CAMWE,SAAA,QAVjBC,WAAA,CAI+BC,IAAA,CAAAC,KAAK,EAAbC,IAAI;yBAJ3BN,mBAAA,CAAAE,SAAA;MAAAJ,GAAA,EAI4CQ,IAAI,CAACC;SAC9BD,IAAI,CAACE,SAAS,I,cAAzBR,mBAAA,CAIK,MAJLS,UAIK,GAHHR,mBAAA,CAEO,cAAAS,gBAAA,CADFJ,IAAI,CAACK,IAAI,iB,KAPxBC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}