{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { ref, watch } from 'vue';\nexport default {\n  __name: 'watcherTask',\n  setup(__props) {\n    const fName = ref(['']);\n    const lName = ref(['']);\n    const greeting = ref('Hello');\n    watch([fName, lName], ([newFirstName, newLastName]) => {\n      console.log(greeting.value = `Hello ${newFirstName} ${newLastName}`);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(_Fragment, null, [_cache[3] || (_cache[3] = _createElementVNode(\"br\", null, null, -1)), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => fName.value = $event),\n        placeholder: \"First name\"\n      }, null, 512), [[_vModelText, fName.value]]), _cache[2] || (_cache[2] = _createElementVNode(\"br\", null, null, -1)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => lName.value = $event),\n        placeholder: \"Last name\"\n      }, null, 512), [[_vModelText, lName.value]]), _createElementVNode(\"p\", null, _toDisplayString(greeting.value), 1)])], 64);\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","fName","lName","greeting","newFirstName","newLastName","console","log","value"],"sources":["/home/indevitus/to-do-list-vue/src/components/watcherTask.vue"],"sourcesContent":["<template>\n    <br>\n    <div>\n        <input type=\"text\" v-model=\"fName\" placeholder=\"First name\">\n        <br>\n        <input type=\"text\" v-model=\"lName\" placeholder=\"Last name\">\n        <p>{{ greeting }}</p>\n    </div>\n</template>\n<script setup>\nimport {ref,  watch} from 'vue'\n\nconst fName=ref(['']);\nconst lName=ref(['']);\nconst greeting=ref('Hello');\n\nwatch ([fName,lName], ([newFirstName,newLastName])=>{\nconsole.log(greeting.value=`Hello ${newFirstName} ${newLastName}`);\n});\n</script>\n<style>\n</style>"],"mappings":";AAUA,SAAQA,GAAG,EAAGC,KAAK,QAAO,KAAI;;;;IAE9B,MAAMC,KAAK,GAACF,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACrB,MAAMG,KAAK,GAACH,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACrB,MAAMI,QAAQ,GAACJ,GAAG,CAAC,OAAO,CAAC;IAE3BC,KAAK,CAAE,CAACC,KAAK,EAACC,KAAK,CAAC,EAAE,CAAC,CAACE,YAAY,EAACC,WAAW,CAAC,KAAG;MACpDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,KAAK,GAAC,SAASJ,YAAY,IAAIC,WAAW,EAAE,CAAC;IAClE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}