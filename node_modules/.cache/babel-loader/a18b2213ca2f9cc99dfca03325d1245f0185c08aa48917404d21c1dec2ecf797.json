{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, \"Original count \" + _toDisplayString($setup.count), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Count multiplied by 2: \" + _toDisplayString($setup.doubleCount), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.increment\n  }, \"Increment\"), _createElementVNode(\"button\", {\n    onClick: $setup.decrement\n  }, \"Decrement\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$setup","count","doubleCount","onClick","increment","decrement"],"sources":["/home/indevitus/to-do-list-vue/src/components/counterComponent.vue"],"sourcesContent":["<template>\n    <div>\n        <p>Original count {{ count }}</p>\n        <p>Count multiplied by 2: {{ doubleCount }}</p>\n        <button @click=\"increment\">Increment</button>\n        <button @click=\"decrement\">Decrement</button>\n    </div>\n</template>\n<script setup>\nimport { ref,computed} from 'vue'\nconst count=ref(0);\n\nconst doubleCount=computed(()=> count.value*2);\nconst increment=()=>{\n  count.value++;\n}\nconst decrement=()=>{\n  count.value--;\n}\n</script>\n<style></style>"],"mappings":";;uBACIA,mBAAA,CAKM,cAJFC,mBAAA,CAAiC,WAA9B,iBAAe,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,KAAK,kBAC1BH,mBAAA,CAA+C,WAA5C,yBAAuB,GAAAC,gBAAA,CAAGC,MAAA,CAAAE,WAAW,kBACxCJ,mBAAA,CAA6C;IAApCK,OAAK,EAAEH,MAAA,CAAAI;EAAS,GAAE,WAAS,GACpCN,mBAAA,CAA6C;IAApCK,OAAK,EAAEH,MAAA,CAAAK;EAAS,GAAE,WAAS,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}